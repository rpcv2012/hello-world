The defining function of the 3n+1 algorithm

(*the function ulam computes one step of the 3k+1 algorithm to a number n*)
ulam[n_] := If[Mod[n, 2] == 0 , n/2, 3 n + 1]


(*the function f allows us to define n as a number not a variable*)
f[n_] := n


(*the function ulamslist returns a string/list of the numbers in the ulams \
procedure*)
ulamslist[n_] := Catch[Module[{y, g}, y := f[n]; g := {}; While[y > 0,
    AppendTo[g, y]; If[y == 1, Throw[g]]; y = ulam[y]]]]

(*ulamnumber as defined here, is the number of steps needed in the 3k+1 \
algorithm to reach 1 plus 1, since the initial number n is included in the \
list*)
ulamnumber[n_] := Length[ulamslist[n]]

(*ulamslistmod8 reduces each element in ulamslist modulo 8*)
ulamslistmod8[n_] := Module[{},
   lst = ulamslist[n];
   index = ulamnumber[n];
   For[i = 1, i < index + 1, i = i + 1,
    valu = Part[lst, i]; Part[lst, i] = Mod[valu, 8]];(*Use Part, as here, 
   to reassign values!*)
   Return[lst];];


The sum of steps needed when viewed as a path

(*This gives the sum of the steps taken if we view this as a path from (0,1) \
to (sumofsteps,1)*)
ulamsumdifferences[n_] := Module[{},
  lst = ulamslist[n];
  m = ulamnumber[n];
  sum = f[n] - 1;
  For [i = 1, i < m, i = i + 1,
   sum = sum + Abs[(lst[[i + 1]] - lst[[i]])]];
  Return[sum];]


Alternative method for generating the ulam sequence in the mod 8 form

realpartcomplexn[n_] := Ceiling[n/8]*Cos[Mod[n, 8]*Pi/4]

(*The imaginary part is written without the I factor, so it is a real number*)


imagpartcomplexn[n_] := Ceiling[n/8]*Sin[Mod[n, 8]*Pi/4]

(*Here we define functions that create the x and y coordinates of the pseudo \
complex numbers corresponding to the list of numbers in ulamslist for a \
number n*)
tablereal[n_] := realpartcomplexn[ulamslist[n]]
tableimag[n_] := imagpartcomplexn[ulamslist[n]]


(*This function combines the realpart and imagpart detailed above*)
complexn[n_] := 
 Ceiling[n/8]*Cos[Mod[n, 8]*Pi/4] + Ceiling[n/8]*I*Sin[Mod[n, 8]*Pi/4]
ListPlot[complexn[ulamslist[8]], AspectRatio -> 1]

The code giving the graphic form of ulams list in mod 8 format, ulamgraph.

datlist[n_] := Transpose@{tablereal[n], tableimag[n]}
ulamgraph[n_] := 
 ListPlot[datlist[n], Joined -> True,(*AxesLabel\[Rule]{"Re","Im"},*)
  PlotMarkers -> Automatic, 
  PlotRange -> {{Min[tablereal[n]], Max[tablereal[n]]}, {Min[tableimag[n]], 
     Max[tableimag[n]]}}, PlotRangeClipping -> False]

Examples of ulamgraph and ulamslist

ulamgraph[10]

ulamgraph[20]

ulamslistmod8[27]
ulamslist[27]
ulamgraph[27]

ulamgraph[10000]

ulamgraph[30]

ulamgraph[100]

ulamgraph[1000]

ulamslist[1000]

ulamslist[27]

ulamslist[300]
ulamgraph[300]

ulamgraph[200]
ulamslist[200]
ulamgraph[27]
